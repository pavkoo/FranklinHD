android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> b
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> a
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> a
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> b
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    boolean isDetached() -> d
    void onHiddenChanged(boolean) -> a
    void startActivity(android.content.Intent) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> e
    void onResume() -> f
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> g
    void onStop() -> h
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> i
    void onDestroy() -> j
    void initState() -> k
    void onDetach() -> l
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> m
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> n
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> o
    void performResume() -> p
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> q
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> r
    void performStop() -> s
    void performReallyStop() -> t
    void performDestroyView() -> u
    void performDestroy() -> v
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> a
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> e
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> a
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.i:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.j:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.k:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.l:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    android.support.v4.util.SimpleArrayMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SimpleArrayMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.m:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.n:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.o:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.p:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.r:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.s:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.u:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.v:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.w:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.x:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> a
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.y:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.z:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.aa:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.ab:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.ac:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ad:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.ArrayMap -> android.support.v4.c.a:
    android.support.v4.util.MapCollections mCollections -> a
    android.support.v4.util.MapCollections getCollection() -> b
    void putAll(java.util.Map) -> putAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.c.b:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.ContainerHelpers -> android.support.v4.c.c:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    int idealIntArraySize(int) -> a
    int idealByteArraySize(int) -> b
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int binarySearch(int[],int,int) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.d:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.e:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.MapCollections -> android.support.v4.c.f:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> a
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> b
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> c
    java.lang.Object[] toArrayHelper(int) -> b
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    java.util.Set getEntrySet() -> d
    java.util.Set getKeySet() -> e
    java.util.Collection getValues() -> f
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.c.g:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.c.h:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.util.Map$Entry) -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.c.i:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.c.j:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> a
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.c.k:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.c.l:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> e
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    void ensureCapacity(int) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> a
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> b
    java.lang.Object valueAt(int) -> c
    java.lang.Object setValueAt(int,java.lang.Object) -> a
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> d
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.m:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> a
    void gc() -> d
    int size() -> b
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.view.GravityCompat -> android.support.v4.view.a:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.b:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.c:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.d:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.e:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.f:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.g:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.h:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.i:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.j:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.k:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.l:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.m:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.n:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.o:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.p:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.q:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.r:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.s:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.t:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.u:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.v:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.w:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.x:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.y:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.z:
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.aa:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ab:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ac:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ad:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ae:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.af:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ag:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.ah:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ai:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.aj:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ak:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.al:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.am:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void sortChildDrawingOrder() -> g
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> c
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> i
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.an:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ao:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ap:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.aq:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ar:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.as:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.at:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.au:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.av:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.aw:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ax:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewAbsoluteGravity(android.view.View) -> e
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> k
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void closeDrawer(android.view.View) -> i
    boolean isDrawerVisible(android.view.View) -> j
    boolean hasPeekingDrawer() -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> e
    android.view.View findVisibleDrawer() -> f
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> c
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.a:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.b:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.c:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.d:
    int mAbsGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.e:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.f:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.g:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.h:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.i:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.j:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.k:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.l:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.m:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.n:
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.o:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> d
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> a
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.p:
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.q:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.r:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.s:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.t:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.u:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.v:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.w:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.x:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.y:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    int getViewDragState() -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> a
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> d
    void ensureMotionHistorySizeForId(int) -> e
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> a
    void setDragState(int) -> b
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> c
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.z:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.aa:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
com.mobeta.android.dslv.DragSortController -> com.mobeta.android.dslv.a:
    int mDragInitMode -> a
    boolean mSortEnabled -> b
    int mRemoveMode -> c
    boolean mRemoveEnabled -> d
    boolean mIsRemoving -> e
    android.view.GestureDetector mDetector -> f
    android.view.GestureDetector mFlingRemoveDetector -> g
    int mTouchSlop -> h
    int mHitPos -> i
    int mFlingHitPos -> j
    int mClickRemoveHitPos -> k
    int[] mTempLoc -> l
    int mItemX -> m
    int mItemY -> n
    int mCurrX -> o
    int mCurrY -> p
    boolean mDragging -> q
    float mFlingSpeed -> r
    int mDragHandleId -> s
    int mClickRemoveId -> t
    int mFlingHandleId -> u
    boolean mCanDrag -> v
    com.mobeta.android.dslv.DragSortListView mDslv -> w
    int mPositionX -> x
    android.view.GestureDetector$OnGestureListener mFlingRemoveListener -> y
    void setDragInitMode(int) -> a
    void setSortEnabled(boolean) -> a
    void setRemoveMode(int) -> b
    void setRemoveEnabled(boolean) -> b
    boolean startDrag(int,int,int) -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void onDragFloatView(android.view.View,android.graphics.Point,android.graphics.Point) -> a
    int startDragPosition(android.view.MotionEvent) -> a
    int startFlingPosition(android.view.MotionEvent) -> b
    int dragHandleHitPosition(android.view.MotionEvent) -> c
    int flingHandleHitPosition(android.view.MotionEvent) -> d
    int viewIdHitPosition(android.view.MotionEvent,int) -> a
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean access$0(com.mobeta.android.dslv.DragSortController) -> a
    boolean access$1(com.mobeta.android.dslv.DragSortController) -> b
    com.mobeta.android.dslv.DragSortListView access$2(com.mobeta.android.dslv.DragSortController) -> c
    float access$3(com.mobeta.android.dslv.DragSortController) -> d
    int access$4(com.mobeta.android.dslv.DragSortController) -> e
    void access$5(com.mobeta.android.dslv.DragSortController,boolean) -> a
com.mobeta.android.dslv.DragSortController$1 -> com.mobeta.android.dslv.b:
    com.mobeta.android.dslv.DragSortController this$0 -> a
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.mobeta.android.dslv.DragSortItemView -> com.mobeta.android.dslv.c:
    int mGravity -> a
    void setGravity(int) -> setGravity
    int getGravity() -> getGravity
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
com.mobeta.android.dslv.DragSortItemViewCheckable -> com.mobeta.android.dslv.d:
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    void toggle() -> toggle
com.mobeta.android.dslv.DragSortListView -> com.mobeta.android.dslv.DragSortListView:
    android.view.View mFloatView -> a
    android.graphics.Point mFloatLoc -> b
    android.graphics.Point mTouchLoc -> c
    int mFloatViewMid -> d
    boolean mFloatViewOnMeasured -> e
    android.database.DataSetObserver mObserver -> f
    float mFloatAlpha -> g
    float mCurrFloatAlpha -> h
    int mFloatPos -> i
    int mFirstExpPos -> j
    int mSecondExpPos -> k
    boolean mAnimate -> l
    int mSrcPos -> m
    int mDragDeltaX -> n
    int mDragDeltaY -> o
    int mOffsetX -> p
    int mOffsetY -> q
    com.mobeta.android.dslv.DragSortListView$DragListener mDragListener -> r
    com.mobeta.android.dslv.DragSortListView$DropListener mDropListener -> s
    com.mobeta.android.dslv.DragSortListView$RemoveListener mRemoveListener -> t
    boolean mDragEnabled -> u
    int mDragState -> v
    int mItemHeightCollapsed -> w
    int mFloatViewHeight -> x
    int mFloatViewHeightHalf -> y
    int mWidthMeasureSpec -> z
    android.view.View[] mSampleViewTypes -> A
    com.mobeta.android.dslv.DragSortListView$DragScroller mDragScroller -> B
    float mDragUpScrollStartFrac -> C
    float mDragDownScrollStartFrac -> D
    int mUpScrollStartY -> E
    int mDownScrollStartY -> F
    float mDownScrollStartYF -> G
    float mUpScrollStartYF -> H
    float mDragUpScrollHeight -> I
    float mDragDownScrollHeight -> J
    float mMaxScrollSpeed -> K
    com.mobeta.android.dslv.DragSortListView$DragScrollProfile mScrollProfile -> L
    int mX -> M
    int mY -> N
    int mLastX -> O
    int mLastY -> P
    int mDragStartY -> Q
    int mDragFlags -> R
    boolean mLastCallWasIntercept -> S
    boolean mInTouchEvent -> T
    com.mobeta.android.dslv.DragSortListView$FloatViewManager mFloatViewManager -> U
    android.view.MotionEvent mCancelEvent -> V
    int mCancelMethod -> W
    float mSlideRegionFrac -> Z
    float mSlideFrac -> aa
    com.mobeta.android.dslv.DragSortListView$AdapterWrapper mAdapterWrapper -> ab
    boolean mTrackDragSort -> ac
    com.mobeta.android.dslv.DragSortListView$DragSortTracker mDragSortTracker -> ad
    boolean mBlockLayoutRequests -> ae
    boolean mIgnoreTouchEvent -> af
    com.mobeta.android.dslv.DragSortListView$HeightCache mChildHeightCache -> ag
    com.mobeta.android.dslv.DragSortListView$RemoveAnimator mRemoveAnimator -> ah
    com.mobeta.android.dslv.DragSortListView$LiftAnimator mLiftAnimator -> ai
    com.mobeta.android.dslv.DragSortListView$DropAnimator mDropAnimator -> aj
    boolean mUseRemoveVelocity -> ak
    float mRemoveVelocityX -> al
    boolean mListViewIntercepted -> am
    boolean mFloatViewInvalidated -> an
    void setFloatAlpha(float) -> setFloatAlpha
    float getFloatAlpha() -> getFloatAlpha
    void setMaxScrollSpeed(float) -> setMaxScrollSpeed
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    android.widget.ListAdapter getInputAdapter() -> getInputAdapter
    void drawDivider(int,android.graphics.Canvas) -> a
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    int getItemHeight(int) -> b
    int getShuffleEdge(int,int) -> a
    boolean updatePositions() -> d
    void onDraw(android.graphics.Canvas) -> onDraw
    void removeItem(int) -> a
    void removeItem(int,float) -> a
    void cancelDrag() -> a
    void clearPositions() -> e
    void dropFloatView() -> f
    void doRemoveItem() -> g
    void doRemoveItem(int) -> c
    void adjustOnReorder() -> h
    boolean stopDrag(boolean) -> a
    boolean stopDragWithVelocity(boolean,float) -> a
    boolean stopDrag(boolean,float) -> b
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void doActionUpOrCancel() -> i
    void saveTouchCoords(android.view.MotionEvent) -> b
    boolean listViewIntercepted() -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void setDragScrollStart(float) -> setDragScrollStart
    void setDragScrollStarts(float,float) -> a
    void continueDrag(int,int) -> b
    void updateScrollStarts() -> j
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void adjustAllItems() -> k
    void adjustItem(int,android.view.View,boolean) -> a
    int getChildHeight(int) -> d
    int getChildHeight(int,android.view.View,boolean) -> b
    int calcItemHeight(int,android.view.View,boolean) -> c
    int calcItemHeight(int,int) -> c
    void requestLayout() -> requestLayout
    int adjustScroll(int,android.view.View,int,int) -> a
    void measureItem(android.view.View) -> a
    void measureFloatView() -> l
    void onMeasure(int,int) -> onMeasure
    void layoutChildren() -> layoutChildren
    boolean onDragTouchEvent(android.view.MotionEvent) -> a
    boolean startDrag(int,int,int,int) -> a
    boolean startDrag(int,android.view.View,int,int,int) -> a
    void doDragFloatView(boolean) -> b
    void doDragFloatView(int,android.view.View,boolean) -> d
    void updateFloatView() -> m
    void destroyFloatView() -> n
    void setFloatViewManager(com.mobeta.android.dslv.DragSortListView$FloatViewManager) -> setFloatViewManager
    void setDragListener(com.mobeta.android.dslv.DragSortListView$DragListener) -> setDragListener
    void setDragEnabled(boolean) -> setDragEnabled
    boolean isDragEnabled() -> c
    void setDropListener(com.mobeta.android.dslv.DragSortListView$DropListener) -> setDropListener
    void setRemoveListener(com.mobeta.android.dslv.DragSortListView$RemoveListener) -> setRemoveListener
    void setDragSortListener(com.mobeta.android.dslv.DragSortListView$DragSortListener) -> setDragSortListener
    void setDragScrollProfile(com.mobeta.android.dslv.DragSortListView$DragScrollProfile) -> setDragScrollProfile
    float access$0(com.mobeta.android.dslv.DragSortListView) -> a
    void access$1(com.mobeta.android.dslv.DragSortListView,int,android.view.View,boolean) -> a
    int access$2(com.mobeta.android.dslv.DragSortListView) -> b
    int access$3(com.mobeta.android.dslv.DragSortListView) -> c
    int access$4(com.mobeta.android.dslv.DragSortListView) -> d
    void access$5(com.mobeta.android.dslv.DragSortListView,int) -> a
    android.graphics.Point access$6(com.mobeta.android.dslv.DragSortListView) -> e
    int access$7(com.mobeta.android.dslv.DragSortListView) -> f
    void access$8(com.mobeta.android.dslv.DragSortListView,boolean) -> a
    int access$9(com.mobeta.android.dslv.DragSortListView) -> g
    int access$10(com.mobeta.android.dslv.DragSortListView) -> h
    void access$11(com.mobeta.android.dslv.DragSortListView,int) -> b
    int access$12(com.mobeta.android.dslv.DragSortListView) -> i
    int access$13(com.mobeta.android.dslv.DragSortListView) -> j
    void access$14(com.mobeta.android.dslv.DragSortListView) -> k
    int access$15(com.mobeta.android.dslv.DragSortListView) -> l
    int access$16(com.mobeta.android.dslv.DragSortListView) -> m
    boolean access$17(com.mobeta.android.dslv.DragSortListView) -> n
    float access$18(com.mobeta.android.dslv.DragSortListView) -> o
    void access$19(com.mobeta.android.dslv.DragSortListView,float) -> a
    void access$20(com.mobeta.android.dslv.DragSortListView) -> p
    int access$21(com.mobeta.android.dslv.DragSortListView,int,android.view.View,boolean) -> b
    void access$22(com.mobeta.android.dslv.DragSortListView) -> q
    int access$23(com.mobeta.android.dslv.DragSortListView) -> r
    com.mobeta.android.dslv.DragSortListView$DragScrollProfile access$24(com.mobeta.android.dslv.DragSortListView) -> s
    float access$25(com.mobeta.android.dslv.DragSortListView) -> t
    float access$26(com.mobeta.android.dslv.DragSortListView) -> u
    float access$27(com.mobeta.android.dslv.DragSortListView) -> v
    float access$28(com.mobeta.android.dslv.DragSortListView) -> w
    void access$29(com.mobeta.android.dslv.DragSortListView,boolean) -> b
    void access$30(com.mobeta.android.dslv.DragSortListView,int,android.view.View,boolean) -> c
    int access$31(com.mobeta.android.dslv.DragSortListView,int) -> c
    int access$32(com.mobeta.android.dslv.DragSortListView,int) -> d
    int access$33(com.mobeta.android.dslv.DragSortListView) -> x
    int access$34(com.mobeta.android.dslv.DragSortListView,int,int) -> a
com.mobeta.android.dslv.DragSortListView$1 -> com.mobeta.android.dslv.e:
    com.mobeta.android.dslv.DragSortListView this$0 -> a
    float getSpeed(float,long) -> a
com.mobeta.android.dslv.DragSortListView$2 -> com.mobeta.android.dslv.f:
    com.mobeta.android.dslv.DragSortListView this$0 -> a
    void cancel() -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.mobeta.android.dslv.DragSortListView$AdapterWrapper -> com.mobeta.android.dslv.g:
    android.widget.ListAdapter mAdapter -> b
    com.mobeta.android.dslv.DragSortListView this$0 -> a
    android.widget.ListAdapter getAdapter() -> a
    long getItemId(int) -> getItemId
    java.lang.Object getItem(int) -> getItem
    int getCount() -> getCount
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean hasStableIds() -> hasStableIds
    boolean isEmpty() -> isEmpty
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.mobeta.android.dslv.DragSortListView$AdapterWrapper$1 -> com.mobeta.android.dslv.h:
    com.mobeta.android.dslv.DragSortListView$AdapterWrapper this$1 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.mobeta.android.dslv.DragSortListView$DragListener -> com.mobeta.android.dslv.i:
    void drag(int,int) -> a
com.mobeta.android.dslv.DragSortListView$DragScrollProfile -> com.mobeta.android.dslv.j:
    float getSpeed(float,long) -> a
com.mobeta.android.dslv.DragSortListView$DragScroller -> com.mobeta.android.dslv.k:
    boolean mAbort -> b
    long mPrevTime -> c
    long mCurrTime -> d
    int dy -> e
    float dt -> f
    long tStart -> g
    int scrollDir -> h
    float mScrollSpeed -> i
    boolean mScrolling -> j
    com.mobeta.android.dslv.DragSortListView this$0 -> a
    boolean isScrolling() -> a
    int getScrollDir() -> b
    void startScrolling(int) -> a
    void stopScrolling(boolean) -> a
    void run() -> run
com.mobeta.android.dslv.DragSortListView$DragSortListener -> com.mobeta.android.dslv.l:
com.mobeta.android.dslv.DragSortListView$DragSortTracker -> com.mobeta.android.dslv.m:
    java.lang.StringBuilder mBuilder -> a
    java.io.File mFile -> b
    int mNumInBuffer -> d
    int mNumFlushes -> e
    boolean mTracking -> f
    com.mobeta.android.dslv.DragSortListView this$0 -> c
    void startTracking() -> a
    void appendState() -> b
    void flush() -> c
    void stopTracking() -> d
com.mobeta.android.dslv.DragSortListView$DropAnimator -> com.mobeta.android.dslv.n:
    int mDropPos -> d
    int srcPos -> e
    float mInitDeltaY -> f
    float mInitDeltaX -> g
    com.mobeta.android.dslv.DragSortListView this$0 -> a
    void onStart() -> a
    int getTargetY() -> e
    void onUpdate(float,float) -> a
    void onStop() -> b
com.mobeta.android.dslv.DragSortListView$DropListener -> com.mobeta.android.dslv.o:
    void drop(int,int) -> a_
com.mobeta.android.dslv.DragSortListView$FloatViewManager -> com.mobeta.android.dslv.p:
    android.view.View onCreateFloatView(int) -> c
    void onDragFloatView(android.view.View,android.graphics.Point,android.graphics.Point) -> a
    void onDestroyFloatView(android.view.View) -> a
com.mobeta.android.dslv.DragSortListView$HeightCache -> com.mobeta.android.dslv.q:
    android.util.SparseIntArray mMap -> b
    java.util.ArrayList mOrder -> c
    int mMaxSize -> d
    com.mobeta.android.dslv.DragSortListView this$0 -> a
    void add(int,int) -> a
    int get(int) -> a
    void clear() -> a
com.mobeta.android.dslv.DragSortListView$LiftAnimator -> com.mobeta.android.dslv.r:
    float mInitDragDeltaY -> d
    float mFinalDragDeltaY -> e
    com.mobeta.android.dslv.DragSortListView this$0 -> a
    void onStart() -> a
    void onUpdate(float,float) -> a
com.mobeta.android.dslv.DragSortListView$RemoveAnimator -> com.mobeta.android.dslv.s:
    float mFloatLocX -> d
    float mFirstStartBlank -> e
    float mSecondStartBlank -> f
    int mFirstChildHeight -> g
    int mSecondChildHeight -> h
    int mFirstPos -> i
    int mSecondPos -> j
    int srcPos -> k
    com.mobeta.android.dslv.DragSortListView this$0 -> a
    void onStart() -> a
    void onUpdate(float,float) -> a
    void onStop() -> b
com.mobeta.android.dslv.DragSortListView$RemoveListener -> com.mobeta.android.dslv.t:
    void remove(int) -> a
com.mobeta.android.dslv.DragSortListView$SmoothAnimator -> com.mobeta.android.dslv.u:
    long mStartTime -> b
    float mDurationF -> a
    float mAlpha -> d
    float mA -> e
    float mB -> f
    float mC -> g
    float mD -> h
    boolean mCanceled -> i
    com.mobeta.android.dslv.DragSortListView this$0 -> c
    float transform(float) -> a
    void start() -> c
    void cancel() -> d
    void onStart() -> a
    void onUpdate(float,float) -> a
    void onStop() -> b
    void run() -> run
com.mobeta.android.dslv.R -> com.mobeta.android.dslv.v:
com.mobeta.android.dslv.R$styleable -> com.mobeta.android.dslv.w:
    int[] DragSortListView -> DragSortListView
    int DragSortListView_click_remove_id -> DragSortListView_click_remove_id
    int DragSortListView_collapsed_height -> DragSortListView_collapsed_height
    int DragSortListView_drag_enabled -> DragSortListView_drag_enabled
    int DragSortListView_drag_handle_id -> DragSortListView_drag_handle_id
    int DragSortListView_drag_scroll_start -> DragSortListView_drag_scroll_start
    int DragSortListView_drag_start_mode -> DragSortListView_drag_start_mode
    int DragSortListView_drop_animation_duration -> DragSortListView_drop_animation_duration
    int DragSortListView_fling_handle_id -> DragSortListView_fling_handle_id
    int DragSortListView_float_alpha -> DragSortListView_float_alpha
    int DragSortListView_float_background_color -> DragSortListView_float_background_color
    int DragSortListView_max_drag_scroll_speed -> DragSortListView_max_drag_scroll_speed
    int DragSortListView_remove_animation_duration -> DragSortListView_remove_animation_duration
    int DragSortListView_remove_enabled -> DragSortListView_remove_enabled
    int DragSortListView_remove_mode -> DragSortListView_remove_mode
    int DragSortListView_slide_shuffle_speed -> DragSortListView_slide_shuffle_speed
    int DragSortListView_sort_enabled -> DragSortListView_sort_enabled
    int DragSortListView_track_drag_sort -> DragSortListView_track_drag_sort
    int DragSortListView_use_default_controller -> DragSortListView_use_default_controller
com.mobeta.android.dslv.SimpleFloatViewManager -> com.mobeta.android.dslv.x:
    android.graphics.Bitmap mFloatBitmap -> a
    android.widget.ImageView mImageView -> b
    int mFloatBGColor -> c
    android.widget.ListView mListView -> d
    void setBackgroundColor(int) -> d
    android.view.View onCreateFloatView(int) -> c
    void onDragFloatView(android.view.View,android.graphics.Point,android.graphics.Point) -> a
    void onDestroyFloatView(android.view.View) -> a
com.pavkoo.franklin.FinishActivity -> com.pavkoo.franklin.FinishActivity:
    android.widget.LinearLayout llFinishVictory -> a
    android.widget.ImageView ivFinishDone -> b
    android.widget.TextView tvFinishStore -> c
    android.widget.TextView tvFinishModify -> d
    android.widget.TextView tvFinishShare -> e
    void initView() -> a
    void initViewEvent() -> b
com.pavkoo.franklin.FinishActivity$1 -> com.pavkoo.franklin.a:
    com.pavkoo.franklin.FinishActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.FinishActivity$2 -> com.pavkoo.franklin.b:
    com.pavkoo.franklin.FinishActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.FinishActivity$3 -> com.pavkoo.franklin.c:
    com.pavkoo.franklin.FinishActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.MainActivity -> com.pavkoo.franklin.MainActivity:
    java.lang.String[] colors -> a
    com.pavkoo.franklin.controls.CyclePager cycleContent -> b
    android.widget.LinearLayout llCycleToday -> c
    android.widget.LinearLayout llCycleReport -> d
    android.widget.LinearLayout llCycleComments -> e
    android.widget.LinearLayout llTitle -> f
    android.view.View viewIndicatiorLeft -> g
    android.view.View viewIndicatiorCenter -> h
    android.view.View viewIndicatiorRight -> i
    com.pavkoo.franklin.MainActivity$ViewState viewState -> j
    android.widget.TableRow trHomeToolBar -> k
    android.widget.ImageView ivHome -> l
    android.widget.ImageView ivCommentNomore -> m
    android.widget.TextView tvMainTitleDescrible -> n
    com.pavkoo.franklin.controls.ScrollingTextView tvMainTitleMotto -> o
    android.widget.TextView tvMainTitle -> p
    android.widget.TextView tvMainDate -> q
    com.pavkoo.franklin.controls.PredicateLayout grpReview -> r
    android.widget.ListView lvComment -> s
    android.widget.ViewFlipper vfMainFlopper -> t
    android.widget.TextView tvMainTime -> u
    android.widget.TextView tvMainTimeHide -> v
    android.widget.TextView tvCycleReprotAppCount -> w
    android.widget.TextView tvCycleReportUserCheckedCount -> x
    android.widget.TextView tvCycleHistoryTitle -> y
    android.widget.TextView tvCycleCommentTitle -> z
    android.widget.TextView txtSetting -> A
    android.widget.TextView txtContactMe -> B
    android.widget.TextView txtHelp -> C
    android.widget.TextView txtMainShare -> D
    android.view.animation.Animation indicatorAnim -> E
    android.view.animation.Animation shakeAnim -> F
    java.lang.Boolean mMenuExpanded -> G
    com.pavkoo.franklin.controls.TodayDialog dialog -> H
    com.pavkoo.franklin.controls.Today today -> I
    java.util.List morals -> J
    java.util.List comments -> K
    com.pavkoo.franklin.controls.CommentAdapter cadapter -> L
    com.pavkoo.franklin.common.Moral todayMoral -> M
    com.pavkoo.franklin.controls.BlemishReport blemishReport -> N
    com.pavkoo.franklin.controls.AnimMessage amMessage -> O
    java.util.List olderList -> P
    java.lang.String todayDialogTitle -> Q
    com.pavkoo.franklin.controls.BlemishReportTotalDialog totalDialog -> R
    com.pavkoo.franklin.controls.BlemishReportTrendDialog trendDialog -> S
    boolean needSave -> T
    long touchTime -> U
    int WaitTime -> V
    int mainColor -> W
    int[] $SWITCH_TABLE$com$pavkoo$franklin$common$CheckState -> X
    void initView() -> a
    void showIndicator() -> h
    void iniDialog() -> i
    void iniReport() -> j
    int getTotalCheckted() -> k
    void initViewData() -> c
    boolean initMorals() -> l
    void initGroupReview(int) -> a
    com.pavkoo.franklin.common.CheckState updateCheckState(android.widget.TextView,com.pavkoo.franklin.common.CheckState,boolean) -> a
    void initComment() -> m
    void updateTextCallBack(java.lang.String,int) -> a
    void updateOlderList(int) -> b
    void updateTextCallBack() -> d
    void callUpdateFontSize() -> e
    void onBackPressed() -> onBackPressed
    void updateUIByMoral(int) -> c
    int getHomeImageIndexByMoral(int) -> d
    int getHomeToolBarRes(int) -> e
    com.pavkoo.franklin.controls.BlemishReportTotalDialog access$0(com.pavkoo.franklin.MainActivity) -> a
    com.pavkoo.franklin.controls.AnimMessage access$1(com.pavkoo.franklin.MainActivity) -> b
    com.pavkoo.franklin.controls.CyclePager access$2(com.pavkoo.franklin.MainActivity) -> c
    android.widget.ImageView access$3(com.pavkoo.franklin.MainActivity) -> d
    android.widget.TableRow access$4(com.pavkoo.franklin.MainActivity) -> e
    java.lang.Boolean access$5(com.pavkoo.franklin.MainActivity) -> f
    void access$6(com.pavkoo.franklin.MainActivity,java.lang.Boolean) -> a
    com.pavkoo.franklin.controls.Today access$7(com.pavkoo.franklin.MainActivity) -> g
    com.pavkoo.franklin.controls.TodayDialog access$8(com.pavkoo.franklin.MainActivity) -> h
    java.util.List access$9(com.pavkoo.franklin.MainActivity) -> i
    com.pavkoo.franklin.common.CheckState access$10(com.pavkoo.franklin.MainActivity,android.widget.TextView,com.pavkoo.franklin.common.CheckState,boolean) -> a
    com.pavkoo.franklin.controls.BlemishReportTrendDialog access$11(com.pavkoo.franklin.MainActivity) -> j
    int[] $SWITCH_TABLE$com$pavkoo$franklin$common$CheckState() -> f
com.pavkoo.franklin.MainActivity$1 -> com.pavkoo.franklin.d:
    com.pavkoo.franklin.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.MainActivity$10 -> com.pavkoo.franklin.e:
    com.pavkoo.franklin.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.MainActivity$11 -> com.pavkoo.franklin.f:
    com.pavkoo.franklin.MainActivity this$0 -> a
    boolean onLongClick(android.view.View) -> onLongClick
com.pavkoo.franklin.MainActivity$2 -> com.pavkoo.franklin.g:
    com.pavkoo.franklin.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.MainActivity$3 -> com.pavkoo.franklin.h:
    com.pavkoo.franklin.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.MainActivity$4 -> com.pavkoo.franklin.i:
    com.pavkoo.franklin.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.MainActivity$5 -> com.pavkoo.franklin.j:
    com.pavkoo.franklin.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.MainActivity$6 -> com.pavkoo.franklin.k:
    com.pavkoo.franklin.MainActivity this$0 -> a
    int[] $SWITCH_TABLE$com$pavkoo$franklin$MainActivity$ViewState -> b
    void onClick(android.view.View) -> onClick
    int[] $SWITCH_TABLE$com$pavkoo$franklin$MainActivity$ViewState() -> a
com.pavkoo.franklin.MainActivity$7 -> com.pavkoo.franklin.l:
    com.pavkoo.franklin.MainActivity this$0 -> a
    void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.pavkoo.franklin.MainActivity$8 -> com.pavkoo.franklin.m:
    com.pavkoo.franklin.MainActivity this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.pavkoo.franklin.MainActivity$9 -> com.pavkoo.franklin.n:
    com.pavkoo.franklin.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.MainActivity$ViewState -> com.pavkoo.franklin.o:
    com.pavkoo.franklin.MainActivity$ViewState HOME -> a
    com.pavkoo.franklin.MainActivity$ViewState SETTING -> b
    com.pavkoo.franklin.MainActivity$ViewState HELP -> c
    com.pavkoo.franklin.MainActivity$ViewState CONTACTME -> d
    com.pavkoo.franklin.MainActivity$ViewState[] ENUM$VALUES -> e
    com.pavkoo.franklin.MainActivity$ViewState[] values() -> values
    com.pavkoo.franklin.MainActivity$ViewState valueOf(java.lang.String) -> valueOf
com.pavkoo.franklin.ParentActivity -> com.pavkoo.franklin.p:
    com.pavkoo.franklin.common.FranklinApplication app -> a
    com.pavkoo.franklin.common.FranklinApplication getApp() -> g
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> a
    void initViewEvent() -> b
    void initViewData() -> c
com.pavkoo.franklin.SettingActivity -> com.pavkoo.franklin.SettingActivity:
    int[] titleList -> n
    int[] decriptionList -> o
    int[] mottoList -> p
    int[] welcomeList -> q
    android.widget.RadioGroup rgSetting -> r
    android.support.v4.app.FragmentManager fmManager -> s
    com.pavkoo.franklin.common.FranklinApplication app -> t
    com.pavkoo.franklin.controls.AnimMessage amMessage -> u
    android.widget.TextView tvSettingDone -> v
    android.widget.TextView tvSettingRestore -> w
    android.widget.TextView tvSettingHelp -> x
    android.widget.RadioButton rbSettingProjectItem -> y
    android.widget.RadioButton rbSettingCycle -> z
    android.widget.RadioButton rbSettingWelcome -> A
    android.widget.RadioButton rbAppSetting -> B
    long touchTime -> C
    int WaitTime -> D
    com.pavkoo.franklin.common.ApplicationConfig config -> E
    boolean cycleClicked -> F
    com.pavkoo.franklin.controls.AnimMessage getAmMessage() -> f
    com.pavkoo.franklin.common.FranklinApplication getApp() -> g
    void onCreate(android.os.Bundle) -> onCreate
    void changeFragment(android.support.v4.app.Fragment) -> b
    void iniViewData() -> h
    void finishSetting() -> m
    void restoreDefault() -> i
    void initAppWithDefaultData(boolean) -> b
    void restore() -> j
    void buildAllCycleDate() -> k
    void buildAllCycleDateNew() -> l
    void onBackPressed() -> onBackPressed
    com.pavkoo.franklin.controls.AnimMessage access$0(com.pavkoo.franklin.SettingActivity) -> a
    android.widget.RadioGroup access$1(com.pavkoo.franklin.SettingActivity) -> b
    com.pavkoo.franklin.common.FranklinApplication access$2(com.pavkoo.franklin.SettingActivity) -> c
    android.widget.RadioButton access$3(com.pavkoo.franklin.SettingActivity) -> d
    boolean access$4(com.pavkoo.franklin.SettingActivity) -> e
    void access$5(com.pavkoo.franklin.SettingActivity,boolean) -> a
    android.widget.RadioButton access$6(com.pavkoo.franklin.SettingActivity) -> f
    com.pavkoo.franklin.common.ApplicationConfig access$7(com.pavkoo.franklin.SettingActivity) -> g
com.pavkoo.franklin.SettingActivity$1 -> com.pavkoo.franklin.q:
    com.pavkoo.franklin.SettingActivity this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.pavkoo.franklin.SettingActivity$2 -> com.pavkoo.franklin.r:
    com.pavkoo.franklin.SettingActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.SettingActivity$3 -> com.pavkoo.franklin.s:
    com.pavkoo.franklin.SettingActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.SettingActivity$4 -> com.pavkoo.franklin.t:
    com.pavkoo.franklin.SettingActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.SettingActivity$5 -> com.pavkoo.franklin.u:
    com.pavkoo.franklin.SettingActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.SettingActivity$6 -> com.pavkoo.franklin.v:
    com.pavkoo.franklin.SettingActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.SettingActivity$FragmentFactory -> com.pavkoo.franklin.w:
    android.support.v4.app.Fragment getInstanceByIndex(int) -> a
com.pavkoo.franklin.SettingCycleFragment -> com.pavkoo.franklin.x:
    android.view.View self -> P
    android.widget.SeekBar sbCycle -> Q
    android.widget.TextView tvSettingCycleText -> R
    android.widget.TextView tvSettingCycleBg -> S
    com.pavkoo.franklin.controls.AnimMessage amMessage -> T
    java.util.List morals -> U
    void onActivityCreated(android.os.Bundle) -> d
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    android.widget.TextView access$0(com.pavkoo.franklin.SettingCycleFragment) -> a
    android.widget.TextView access$1(com.pavkoo.franklin.SettingCycleFragment) -> b
    com.pavkoo.franklin.controls.AnimMessage access$2(com.pavkoo.franklin.SettingCycleFragment) -> c
    java.util.List access$3(com.pavkoo.franklin.SettingCycleFragment) -> d
com.pavkoo.franklin.SettingCycleFragment$1 -> com.pavkoo.franklin.y:
    com.pavkoo.franklin.SettingCycleFragment this$0 -> a
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
com.pavkoo.franklin.SettingProjectItemFragment -> com.pavkoo.franklin.z:
    android.view.View self -> P
    com.pavkoo.franklin.SettingActivity parent -> Q
    com.mobeta.android.dslv.DragSortListView dslvMorals -> R
    android.widget.ImageView ivSettingProjectItemAdd -> S
    android.widget.ImageView ivSettingProjectItemAddBG -> T
    com.pavkoo.franklin.SettingProjectItemFragment$MoralAdapter adapter -> U
    java.util.List morals -> V
    android.view.animation.Animation addExpanding -> W
    com.pavkoo.franklin.controls.SettingProjectItemDialog itemDialog -> X
    com.pavkoo.franklin.controls.AnimMessage amMessage -> Y
    com.pavkoo.franklin.controls.ComfirmDialog comfirmDialog -> Z
    int deleteWhich -> aa
    com.mobeta.android.dslv.DragSortListView$DropListener onDrop -> ab
    com.mobeta.android.dslv.DragSortListView$RemoveListener onRemove -> ac
    void onActivityCreated(android.os.Bundle) -> d
    void updateDate() -> x
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void ReStore() -> w
    com.pavkoo.franklin.SettingProjectItemFragment$MoralAdapter access$0(com.pavkoo.franklin.SettingProjectItemFragment) -> a
    com.pavkoo.franklin.controls.AnimMessage access$1(com.pavkoo.franklin.SettingProjectItemFragment) -> b
    java.util.List access$2(com.pavkoo.franklin.SettingProjectItemFragment) -> c
    void access$3(com.pavkoo.franklin.SettingProjectItemFragment) -> d
    void access$4(com.pavkoo.franklin.SettingProjectItemFragment,int) -> a
    com.pavkoo.franklin.controls.ComfirmDialog access$5(com.pavkoo.franklin.SettingProjectItemFragment) -> e
    com.pavkoo.franklin.controls.SettingProjectItemDialog access$6(com.pavkoo.franklin.SettingProjectItemFragment) -> f
    int access$7(com.pavkoo.franklin.SettingProjectItemFragment) -> g
com.pavkoo.franklin.SettingProjectItemFragment$1 -> com.pavkoo.franklin.aa:
    com.pavkoo.franklin.SettingProjectItemFragment this$0 -> a
    void drop(int,int) -> a_
com.pavkoo.franklin.SettingProjectItemFragment$2 -> com.pavkoo.franklin.ab:
    com.pavkoo.franklin.SettingProjectItemFragment this$0 -> a
    void remove(int) -> a
com.pavkoo.franklin.SettingProjectItemFragment$3 -> com.pavkoo.franklin.ac:
    com.pavkoo.franklin.SettingProjectItemFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.pavkoo.franklin.SettingProjectItemFragment$4 -> com.pavkoo.franklin.ad:
    com.pavkoo.franklin.SettingProjectItemFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.SettingProjectItemFragment$5 -> com.pavkoo.franklin.ae:
    com.pavkoo.franklin.SettingProjectItemFragment this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.pavkoo.franklin.SettingProjectItemFragment$6 -> com.pavkoo.franklin.af:
    com.pavkoo.franklin.SettingProjectItemFragment this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.pavkoo.franklin.SettingProjectItemFragment$MoralAdapter -> com.pavkoo.franklin.ag:
    android.content.Context context -> b
    java.util.List morals -> c
    com.pavkoo.franklin.SettingProjectItemFragment this$0 -> a
    void setMorals(java.util.List) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.pavkoo.franklin.SettingSystemFragment -> com.pavkoo.franklin.ah:
    android.view.View self -> P
    int[] heads -> Q
    int[] headStrs -> R
    com.pavkoo.franklin.SettingSystemFragment$SettingSystemAdapter adapter -> S
    android.widget.ListView lvSettingSystem -> T
    com.pavkoo.franklin.controls.AnimMessage amMessage -> U
    com.pavkoo.franklin.controls.SettingSystemRestartDialog restartDialog -> V
    com.pavkoo.franklin.controls.SettingSystemRestartDialog restoreDialog -> W
    com.pavkoo.franklin.controls.SettingSystemFranklinDialog franklinDialog -> X
    com.pavkoo.franklin.controls.SettingSystemMeDialog meDialog -> Y
    com.pavkoo.franklin.controls.SettingSystemHelpDialog helpDialog -> Z
    void onActivityCreated(android.os.Bundle) -> d
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    com.pavkoo.franklin.controls.SettingSystemRestartDialog access$0(com.pavkoo.franklin.SettingSystemFragment) -> a
    com.pavkoo.franklin.controls.SettingSystemRestartDialog access$1(com.pavkoo.franklin.SettingSystemFragment) -> b
    com.pavkoo.franklin.controls.AnimMessage access$2(com.pavkoo.franklin.SettingSystemFragment) -> c
    int[] access$3(com.pavkoo.franklin.SettingSystemFragment) -> d
    com.pavkoo.franklin.controls.SettingSystemFranklinDialog access$4(com.pavkoo.franklin.SettingSystemFragment) -> e
    com.pavkoo.franklin.controls.SettingSystemMeDialog access$5(com.pavkoo.franklin.SettingSystemFragment) -> f
    com.pavkoo.franklin.controls.SettingSystemHelpDialog access$6(com.pavkoo.franklin.SettingSystemFragment) -> g
com.pavkoo.franklin.SettingSystemFragment$1 -> com.pavkoo.franklin.ai:
    com.pavkoo.franklin.SettingSystemFragment this$0 -> a
    void UpdateUI(java.lang.Object) -> a
com.pavkoo.franklin.SettingSystemFragment$2 -> com.pavkoo.franklin.aj:
    com.pavkoo.franklin.SettingSystemFragment this$0 -> a
    void UpdateUI(java.lang.Object) -> a
com.pavkoo.franklin.SettingSystemFragment$3 -> com.pavkoo.franklin.ak:
    com.pavkoo.franklin.SettingSystemFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.pavkoo.franklin.SettingSystemFragment$SettingSystemAdapter -> com.pavkoo.franklin.al:
    android.content.Context context -> b
    int[] imgRes -> c
    int[] strings -> d
    com.pavkoo.franklin.SettingSystemFragment this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.pavkoo.franklin.SettingWelcomeFragment -> com.pavkoo.franklin.am:
    android.view.View self -> P
    com.mobeta.android.dslv.DragSortListView dslvWelcome -> Q
    android.widget.ImageView ivSettingWelcomeAdd -> R
    android.widget.ImageView ivSettingWelcomeAddBG -> S
    com.pavkoo.franklin.SettingWelcomeFragment$MoralAdapter adapter -> T
    java.util.List welcomes -> U
    android.view.animation.Animation addExpanding -> V
    com.pavkoo.franklin.controls.SettingWelcomeDialog dialog -> W
    com.pavkoo.franklin.controls.AnimMessage amMessage -> X
    com.pavkoo.franklin.controls.ComfirmDialog comfirmDialog -> Y
    int deleteWhich -> Z
    com.mobeta.android.dslv.DragSortListView$RemoveListener onRemove -> aa
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void access$0(com.pavkoo.franklin.SettingWelcomeFragment,int) -> a
    com.pavkoo.franklin.controls.ComfirmDialog access$1(com.pavkoo.franklin.SettingWelcomeFragment) -> a
    com.pavkoo.franklin.controls.SettingWelcomeDialog access$2(com.pavkoo.franklin.SettingWelcomeFragment) -> b
    java.util.List access$3(com.pavkoo.franklin.SettingWelcomeFragment) -> c
    com.pavkoo.franklin.SettingWelcomeFragment$MoralAdapter access$4(com.pavkoo.franklin.SettingWelcomeFragment) -> d
    com.pavkoo.franklin.controls.AnimMessage access$5(com.pavkoo.franklin.SettingWelcomeFragment) -> e
    int access$6(com.pavkoo.franklin.SettingWelcomeFragment) -> f
com.pavkoo.franklin.SettingWelcomeFragment$1 -> com.pavkoo.franklin.an:
    com.pavkoo.franklin.SettingWelcomeFragment this$0 -> a
    void remove(int) -> a
com.pavkoo.franklin.SettingWelcomeFragment$2 -> com.pavkoo.franklin.ao:
    com.pavkoo.franklin.SettingWelcomeFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.SettingWelcomeFragment$3 -> com.pavkoo.franklin.ap:
    com.pavkoo.franklin.SettingWelcomeFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.pavkoo.franklin.SettingWelcomeFragment$4 -> com.pavkoo.franklin.aq:
    com.pavkoo.franklin.SettingWelcomeFragment this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.pavkoo.franklin.SettingWelcomeFragment$5 -> com.pavkoo.franklin.ar:
    com.pavkoo.franklin.SettingWelcomeFragment this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.pavkoo.franklin.SettingWelcomeFragment$MoralAdapter -> com.pavkoo.franklin.as:
    android.content.Context context -> b
    java.util.List welcomes -> c
    com.pavkoo.franklin.SettingWelcomeFragment this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.pavkoo.franklin.SplashActivity -> com.pavkoo.franklin.SplashActivity:
    android.widget.TextView tvSplash -> a
    android.widget.ImageView ivSplash -> b
    android.widget.ImageView ivCloud -> c
    android.widget.ImageView ivCloud2 -> d
    android.widget.LinearLayout llSpVictory -> e
    int START_SPLASH_OFFSET -> f
    com.pavkoo.franklin.common.ApplicationConfig config -> g
    void initView() -> a
    void initViewData() -> c
    void selectImage() -> d
    com.pavkoo.franklin.common.ApplicationConfig access$0(com.pavkoo.franklin.SplashActivity) -> a
com.pavkoo.franklin.SplashActivity$1 -> com.pavkoo.franklin.at:
    com.pavkoo.franklin.SplashActivity this$0 -> a
    void run() -> run
com.pavkoo.franklin.TutorialsActivity -> com.pavkoo.franklin.TutorialsActivity:
    android.widget.LinearLayout llChart -> a
    android.widget.TextView tvChart -> b
    android.widget.TextView tvChartShowBook -> c
    android.widget.TextView tvChartGo -> d
    android.widget.ImageView ivTutoriHead -> e
    com.pavkoo.franklin.controls.SettingSystemHelpDialog helpDialog -> f
    android.widget.TextView tvChartBye -> g
    void initView() -> a
    void initViewEvent() -> b
    android.widget.TextView access$0(com.pavkoo.franklin.TutorialsActivity) -> a
    android.widget.LinearLayout access$1(com.pavkoo.franklin.TutorialsActivity) -> b
    android.widget.ImageView access$2(com.pavkoo.franklin.TutorialsActivity) -> c
    com.pavkoo.franklin.controls.SettingSystemHelpDialog access$3(com.pavkoo.franklin.TutorialsActivity) -> d
com.pavkoo.franklin.TutorialsActivity$1 -> com.pavkoo.franklin.au:
    com.pavkoo.franklin.TutorialsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.TutorialsActivity$2 -> com.pavkoo.franklin.av:
    com.pavkoo.franklin.TutorialsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.TutorialsActivity$3 -> com.pavkoo.franklin.aw:
    com.pavkoo.franklin.TutorialsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.TutorialsActivity$4 -> com.pavkoo.franklin.ax:
    com.pavkoo.franklin.TutorialsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.common.ApplicationConfig -> com.pavkoo.franklin.common.a:
    boolean isFrist -> a
    boolean isselfConfiged -> b
    boolean isDefaultSaved -> c
    boolean isProjectStarted -> d
    java.util.Date firstUse -> e
    java.util.Date lastUse -> f
    int historyCount -> g
    int getHistoryCount() -> a
    void setHistoryCount(int) -> a
    boolean isFrist() -> b
    void setFrist(boolean) -> a
    boolean isIsselfConfiged() -> c
    void setIsselfConfiged(boolean) -> b
    boolean isDefaultSaved() -> d
    void setDefaultSaved(boolean) -> c
    boolean isProjectStarted() -> e
    void setProjectStarted(boolean) -> d
    java.util.Date getFirstUse() -> f
    void setFirstUse(java.util.Date) -> a
    void setLastUse(java.util.Date) -> b
    int getUseAppCount() -> g
com.pavkoo.franklin.common.CheckState -> com.pavkoo.franklin.common.b:
    com.pavkoo.franklin.common.CheckState UNKNOW -> a
    com.pavkoo.franklin.common.CheckState DONE -> b
    com.pavkoo.franklin.common.CheckState UNDONE -> c
    com.pavkoo.franklin.common.CheckState[] ENUM$VALUES -> d
    com.pavkoo.franklin.common.CheckState[] values() -> values
    com.pavkoo.franklin.common.CheckState valueOf(java.lang.String) -> valueOf
com.pavkoo.franklin.common.Comment -> com.pavkoo.franklin.common.c:
    java.lang.String content -> a
    int count -> b
    java.lang.String getContent() -> a
    void setContent(java.lang.String) -> a
    int getCount() -> b
    void setCount(int) -> a
    int compareTo(com.pavkoo.franklin.common.Comment) -> a
    boolean equals(java.lang.Object) -> equals
    int compareTo(java.lang.Object) -> compareTo
com.pavkoo.franklin.common.CommonConst -> com.pavkoo.franklin.common.d:
    java.lang.String[] colors -> a
    java.lang.String[] colorBg -> b
com.pavkoo.franklin.common.FranklinApplication -> com.pavkoo.franklin.common.FranklinApplication:
    com.pavkoo.franklin.common.FranklinApplication singleton -> c
    int AnimationDuration -> a
    int AnimationDurationShort -> b
    com.pavkoo.franklin.common.ApplicationConfig appCon -> d
    java.util.List morals -> e
    java.util.List comments -> f
    java.util.List welcomes -> g
    java.util.concurrent.ExecutorService fixedThreadPool -> h
    com.pavkoo.franklin.common.SharePreferenceService mPreference -> i
    java.util.List getWelcomes() -> a
    com.pavkoo.franklin.common.ApplicationConfig getAppCon() -> b
    java.util.List getMorals() -> c
    java.util.List getComments() -> d
    void onCreate() -> onCreate
    void loadData() -> e
    void saveData(boolean) -> a
    void saveData() -> f
    void saveMorals(java.util.List,boolean) -> a
    void saveMorals(java.util.List) -> a
    void markMailStone() -> g
    void saveComments(java.util.List,boolean) -> b
    void saveComments(java.util.List) -> b
    void saveWelcomes(java.util.List,boolean) -> c
    void saveWelcomes(java.util.List) -> c
    void saveAppConfig(com.pavkoo.franklin.common.ApplicationConfig,boolean) -> a
    void saveAppConfig(com.pavkoo.franklin.common.ApplicationConfig) -> a
    com.pavkoo.franklin.common.SharePreferenceService access$0(com.pavkoo.franklin.common.FranklinApplication) -> a
    com.pavkoo.franklin.common.ApplicationConfig access$1(com.pavkoo.franklin.common.FranklinApplication) -> b
    void access$2(com.pavkoo.franklin.common.FranklinApplication,com.pavkoo.franklin.common.ApplicationConfig) -> a
    java.util.List access$3(com.pavkoo.franklin.common.FranklinApplication) -> c
    void access$4(com.pavkoo.franklin.common.FranklinApplication,java.util.List) -> a
    java.util.List access$5(com.pavkoo.franklin.common.FranklinApplication) -> d
    void access$6(com.pavkoo.franklin.common.FranklinApplication,java.util.List) -> b
    java.util.List access$7(com.pavkoo.franklin.common.FranklinApplication) -> e
    void access$8(com.pavkoo.franklin.common.FranklinApplication,java.util.List) -> c
com.pavkoo.franklin.common.FranklinApplication$1 -> com.pavkoo.franklin.common.e:
    com.pavkoo.franklin.common.FranklinApplication this$0 -> a
    void run() -> run
com.pavkoo.franklin.common.FranklinApplication$2 -> com.pavkoo.franklin.common.f:
    com.pavkoo.franklin.common.FranklinApplication this$0 -> a
    java.util.List val$moralList -> b
    void run() -> run
com.pavkoo.franklin.common.FranklinApplication$3 -> com.pavkoo.franklin.common.g:
    com.pavkoo.franklin.common.FranklinApplication this$0 -> a
    java.util.List val$commentList -> b
    void run() -> run
com.pavkoo.franklin.common.FranklinApplication$4 -> com.pavkoo.franklin.common.h:
    com.pavkoo.franklin.common.FranklinApplication this$0 -> a
    java.util.List val$welcomeList -> b
    void run() -> run
com.pavkoo.franklin.common.FranklinApplication$5 -> com.pavkoo.franklin.common.i:
    com.pavkoo.franklin.common.FranklinApplication this$0 -> a
    com.pavkoo.franklin.common.ApplicationConfig val$appConfig -> b
    void run() -> run
com.pavkoo.franklin.common.Moral -> com.pavkoo.franklin.common.j:
    java.lang.String title -> a
    java.lang.String titleDes -> b
    java.lang.String titleMotto -> c
    boolean finished -> d
    java.util.List commentIndex -> e
    java.util.List stateList -> f
    int cycle -> g
    int currentDayInCycle -> h
    java.util.Date startDate -> i
    java.util.Date endDate -> j
    int getCurrentDayInCycle() -> a
    void clearHistoryComment() -> b
    void setCurrentDayInCycle(int) -> a
    java.util.Date getStartDate() -> c
    void setStartDate(java.util.Date) -> a
    java.util.Date getEndDate() -> d
    void setEndDate(java.util.Date) -> b
    boolean isFinished() -> e
    boolean isDoing() -> f
    void setFinished(boolean) -> a
    java.util.List getComments() -> g
    java.lang.String getTitleMotto() -> h
    void setTitleMotto(java.lang.String) -> a
    com.pavkoo.franklin.common.CheckState getTodaySelected() -> i
    com.pavkoo.franklin.common.CheckState getHistorySelected(int) -> b
    void setHistorySelected(int,com.pavkoo.franklin.common.CheckState) -> a
    void setHistorySelected(int,com.pavkoo.franklin.common.CheckState,int) -> a
    java.lang.String getTitle() -> j
    void setTitle(java.lang.String) -> b
    java.lang.String getTitleDes() -> k
    void setTitleDes(java.lang.String) -> c
    java.util.List getStateList() -> l
    int getCycle() -> m
    void setCycle(int) -> c
    int getCheckedCount() -> n
    int getTotalCheckCount() -> o
    int getTotalCheckedSize() -> p
    int getCycleCount() -> q
    float getCheckRate(int) -> d
    void reSet() -> r
com.pavkoo.franklin.common.SharePreferenceService -> com.pavkoo.franklin.common.k:
    android.content.Context context -> a
    java.lang.String MORAL_FILE -> b
    java.lang.String HISTORY_MORAL_FILE -> c
    java.lang.String HISTORY_COMMENT_FILE -> d
    java.lang.String COMMENT_FILE -> e
    java.lang.String WELCOME_FILE -> f
    com.pavkoo.franklin.common.ApplicationConfig loadAppconfig() -> a
    com.pavkoo.franklin.common.ApplicationConfig saveAppConfig(com.pavkoo.franklin.common.ApplicationConfig) -> a
    java.util.List saveMorals(java.util.List) -> a
    java.util.List saveComments(java.util.List) -> b
    java.util.List saveHistoryComments(java.util.List,int) -> a
    java.util.List saveHistoryMorals(java.util.List,int) -> b
    java.util.List saveWelcomes(java.util.List) -> c
    java.util.List loadMorals() -> b
    java.util.List loadComments() -> c
    java.util.List loadWelcomes() -> d
    void saveFile(java.lang.Object,java.lang.String) -> a
    java.lang.Object loadFile(java.lang.String) -> a
com.pavkoo.franklin.common.UtilsClass -> com.pavkoo.franklin.common.l:
    java.lang.String dateToString(java.util.Date) -> a
    java.util.Date stringToDate(java.lang.String) -> a
    long dayCount(java.util.Date,java.util.Date) -> a
    java.util.Date subDate(java.util.Date,int) -> a
    void reArrangeDate(java.util.List) -> a
    void shareMsg(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void shareMsg(android.content.Context,java.lang.String,java.lang.String,android.view.View) -> a
    java.lang.String GetandSaveCurrentImage(android.view.View) -> a
    java.lang.String getSDCardPath() -> a
com.pavkoo.franklin.controls.AnimMessage -> com.pavkoo.franklin.controls.AnimMessage:
    android.widget.LinearLayout llMessageBg -> a
    android.widget.TextView tvMessage -> b
    android.animation.ValueAnimator inAnimation -> c
    android.animation.ValueAnimator colorAnimation -> d
    boolean showing -> e
    int CLOSEMESSAGE -> f
    int INIMESSAGE -> g
    int HINTTIMEOUT -> h
    int INFOTIMEOUT -> i
    int WARNINGTIMEOUT -> j
    int ERRORTIMEOUT -> k
    java.lang.String delayMsg -> l
    com.pavkoo.franklin.controls.AnimMessage$AnimMessageType delayAnimMessageType -> m
    android.os.Handler myHandle -> n
    int[] $SWITCH_TABLE$com$pavkoo$franklin$controls$AnimMessage$AnimMessageType -> o
    void iniView() -> c
    void reset() -> a
    void showMessage(java.lang.String) -> a
    void showMessage(java.lang.String,int) -> a
    void showMessage(java.lang.String,com.pavkoo.franklin.controls.AnimMessage$AnimMessageType,int) -> a
    void showMessage(java.lang.String,com.pavkoo.franklin.controls.AnimMessage$AnimMessageType) -> a
    android.animation.ValueAnimator access$0(com.pavkoo.franklin.controls.AnimMessage) -> a
    void access$1(com.pavkoo.franklin.controls.AnimMessage,boolean) -> a
    java.lang.String access$2(com.pavkoo.franklin.controls.AnimMessage) -> b
    com.pavkoo.franklin.controls.AnimMessage$AnimMessageType access$3(com.pavkoo.franklin.controls.AnimMessage) -> c
    android.widget.LinearLayout access$4(com.pavkoo.franklin.controls.AnimMessage) -> d
    int[] $SWITCH_TABLE$com$pavkoo$franklin$controls$AnimMessage$AnimMessageType() -> b
com.pavkoo.franklin.controls.AnimMessage$1 -> com.pavkoo.franklin.controls.a:
    com.pavkoo.franklin.controls.AnimMessage this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.pavkoo.franklin.controls.AnimMessage$2 -> com.pavkoo.franklin.controls.b:
    com.pavkoo.franklin.controls.AnimMessage this$0 -> a
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.pavkoo.franklin.controls.AnimMessage$AnimMessageType -> com.pavkoo.franklin.controls.c:
    com.pavkoo.franklin.controls.AnimMessage$AnimMessageType INFO -> a
    com.pavkoo.franklin.controls.AnimMessage$AnimMessageType WARNING -> b
    com.pavkoo.franklin.controls.AnimMessage$AnimMessageType ERROR -> c
    com.pavkoo.franklin.controls.AnimMessage$AnimMessageType Hint -> d
    com.pavkoo.franklin.controls.AnimMessage$AnimMessageType[] ENUM$VALUES -> e
    com.pavkoo.franklin.controls.AnimMessage$AnimMessageType[] values() -> values
    com.pavkoo.franklin.controls.AnimMessage$AnimMessageType valueOf(java.lang.String) -> valueOf
com.pavkoo.franklin.controls.BlemishReport -> com.pavkoo.franklin.controls.BlemishReport:
    float DotSpace -> a
    java.util.List morals -> b
    android.graphics.Paint mPaint -> c
    int mRow -> d
    int mCol -> e
    float density -> f
    float mDivideWidth -> g
    float mCellWidth -> h
    float mCellHeight -> i
    float mTitleWidth -> j
    float mTitleHeight -> k
    java.lang.String dotColor -> l
    java.lang.String futurebg -> m
    java.util.List getMorals() -> getMorals
    void setMorals(java.util.List) -> setMorals
    void calcDrawproperty() -> a
    int getRowCount() -> getRowCount
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    int getItemCycle() -> getItemCycle
    float getRowTitleWidth() -> getRowTitleWidth
    float getColTitleHeight() -> getColTitleHeight
    void initView() -> b
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawDot(android.graphics.Canvas,android.graphics.Paint,float,float,float,float) -> a
    boolean canDraw() -> c
com.pavkoo.franklin.controls.BlemishReportTotalDialog -> com.pavkoo.franklin.controls.d:
    android.widget.TextView tvReportToatalClose -> b
    android.widget.TextView tvReportToatalShare -> c
    android.widget.TextView tvReportToatalTitle -> d
    android.widget.ListView lvTotal -> e
    com.pavkoo.franklin.controls.TotalAdapter totalAdapter -> f
    java.util.List morals -> g
    android.view.View dialogView -> a
    void setMorals(java.util.List,int) -> a
    void updateUIByMoral(int) -> a
com.pavkoo.franklin.controls.BlemishReportTotalDialog$1 -> com.pavkoo.franklin.controls.e:
    com.pavkoo.franklin.controls.BlemishReportTotalDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.controls.BlemishReportTotalDialog$2 -> com.pavkoo.franklin.controls.f:
    com.pavkoo.franklin.controls.BlemishReportTotalDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.controls.BlemishReportTrendDialog -> com.pavkoo.franklin.controls.g:
    android.widget.TextView tvReportTrendClose -> a
    android.widget.TextView tvReportTrendShare -> b
    android.widget.TextView tvReportTrendTitle -> c
    android.widget.ListView lvTrend -> d
    com.pavkoo.franklin.controls.TrendAdapter trandAdapter -> e
    java.util.List morals -> f
    android.view.View dialogView -> g
    void setMorals(java.util.List) -> a
    void updateUIByMoral(int) -> a
    android.view.View access$0(com.pavkoo.franklin.controls.BlemishReportTrendDialog) -> a
com.pavkoo.franklin.controls.BlemishReportTrendDialog$1 -> com.pavkoo.franklin.controls.h:
    com.pavkoo.franklin.controls.BlemishReportTrendDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.controls.BlemishReportTrendDialog$2 -> com.pavkoo.franklin.controls.i:
    com.pavkoo.franklin.controls.BlemishReportTrendDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.controls.ComfirmDialog -> com.pavkoo.franklin.controls.j:
    boolean dialogResult -> a
    android.widget.TextView tvSettingProjectItemDeleteTitle -> b
    android.widget.TextView tvSettingProjectItemDeleteCancel -> c
    android.widget.TextView tvSettingProjectItemDeleteYes -> d
    boolean isDialogResult() -> a
    void setDialogTitle(java.lang.String) -> a
    void access$0(com.pavkoo.franklin.controls.ComfirmDialog,boolean) -> a
com.pavkoo.franklin.controls.ComfirmDialog$1 -> com.pavkoo.franklin.controls.k:
    com.pavkoo.franklin.controls.ComfirmDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.controls.ComfirmDialog$2 -> com.pavkoo.franklin.controls.l:
    com.pavkoo.franklin.controls.ComfirmDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.controls.ComfirmDialog$3 -> com.pavkoo.franklin.controls.m:
    com.pavkoo.franklin.controls.ComfirmDialog this$0 -> a
    void onShow(android.content.DialogInterface) -> onShow
com.pavkoo.franklin.controls.CommentAdapter -> com.pavkoo.franklin.controls.n:
    android.widget.LinearLayout llCommentItemBg -> a
    android.widget.TextView txtCommentItemNumber -> b
    android.widget.TextView txtCommentItemText -> c
    int max -> d
    int mainColor -> e
    java.util.List comments -> f
    android.content.Context context -> g
    void setComments(java.util.List) -> a
    void updateMax() -> a
    void notifyDataSetChanged() -> notifyDataSetChanged
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.pavkoo.franklin.controls.CyclePager -> com.pavkoo.franklin.controls.CyclePager:
    android.view.VelocityTracker mVelocityTracker -> f
    int mMaximumVelocity -> g
    int touchState -> h
    boolean lock -> i
    float lastMotionX -> j
    float lastMotionY -> k
    java.util.List views -> l
    boolean isMoved -> m
    java.lang.Runnable mLongPressRunnable -> n
    int width -> a
    int height -> b
    com.pavkoo.franklin.controls.IUpdateViewCallback updateViewCallBack -> o
    int offset -> c
    com.pavkoo.franklin.controls.CyclePager$FlipAnimationHandler mAnimationHandler -> d
    int ovv -> e
    com.pavkoo.franklin.controls.IUpdateViewCallback getUpdateViewCallBack() -> getUpdateViewCallBack
    void setUpdateViewCallBack(com.pavkoo.franklin.controls.IUpdateViewCallback) -> setUpdateViewCallBack
    void init(android.widget.LinearLayout,android.widget.LinearLayout,android.widget.LinearLayout) -> a
    void onMeasure(int,int) -> onMeasure
    int measureWidth(int) -> a
    int measureHeight(int) -> b
    int getCurrent() -> getCurrent
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void moveToFitView(int) -> c
    void moveView() -> a
    boolean swapView(int) -> d
    void swapViewIndex(int) -> e
    void access$0(com.pavkoo.franklin.controls.CyclePager) -> a
com.pavkoo.franklin.controls.CyclePager$FlipAnimationHandler -> com.pavkoo.franklin.controls.o:
    com.pavkoo.franklin.controls.CyclePager this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    void sleep(long) -> a
com.pavkoo.franklin.controls.Flipper -> com.pavkoo.franklin.controls.p:
    android.widget.LinearLayout view1 -> g
    android.widget.LinearLayout view2 -> h
    android.widget.LinearLayout view3 -> i
    com.pavkoo.franklin.controls.IUpdateTextCallBack updateText -> j
    android.view.VelocityTracker mVelocityTracker -> k
    int mMaximumVelocity -> l
    int touchState -> m
    boolean lock -> n
    float lastMotionX -> o
    float lastMotionY -> p
    float startMotionX -> q
    float invisiableLeft -> r
    android.content.Context context -> s
    java.util.List views -> t
    java.util.List textViews -> u
    android.graphics.Typeface typeFace -> v
    boolean isMoved -> w
    java.lang.Runnable mLongPressRunnable -> x
    int width -> a
    int height -> b
    int mCurrentValue -> y
    int sign -> c
    int mTargetValue -> z
    android.os.Handler textHandler -> A
    int offset -> d
    com.pavkoo.franklin.controls.Flipper$FlipAnimationHandler mAnimationHandler -> e
    int ovv -> f
    com.pavkoo.franklin.controls.IUpdateTextCallBack getUpdateText() -> getUpdateText
    void setUpdateText(com.pavkoo.franklin.controls.IUpdateTextCallBack) -> setUpdateText
    java.util.List getTextViews() -> getTextViews
    java.lang.Runnable getLongPressRunnable() -> getLongPressRunnable
    void setLongPressRunnable(java.lang.Runnable) -> setLongPressRunnable
    int getCurrentValue() -> getCurrentValue
    void setCurrentValue(int) -> setCurrentValue
    int getTargetValue() -> getTargetValue
    void setTargetValue(int) -> setTargetValue
    android.widget.TextView makeTextView() -> b
    void init() -> c
    void updateTextSize(float) -> a
    void updateText() -> d
    void prepareText(java.lang.Boolean) -> a
    void startAnimationText() -> a
    void onMeasure(int,int) -> onMeasure
    int measureWidth(int) -> a
    int measureHeight(int) -> b
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean isInCycle(float,float) -> a
    void updateAlpha(android.view.View) -> a
    void postCheckForLongPress() -> e
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void moveToFitView(int) -> c
    void moveView() -> f
    boolean swapView(int) -> d
    void swapViewIndex(int) -> e
    int access$0(com.pavkoo.franklin.controls.Flipper) -> a
    int access$1(com.pavkoo.franklin.controls.Flipper) -> b
    void access$2(com.pavkoo.franklin.controls.Flipper) -> c
    void access$3(com.pavkoo.franklin.controls.Flipper,boolean) -> a
    java.util.List access$4(com.pavkoo.franklin.controls.Flipper) -> d
    void access$5(com.pavkoo.franklin.controls.Flipper,int) -> a
    void access$6(com.pavkoo.franklin.controls.Flipper) -> e
com.pavkoo.franklin.controls.Flipper$1 -> com.pavkoo.franklin.controls.q:
    com.pavkoo.franklin.controls.Flipper this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.pavkoo.franklin.controls.Flipper$FlipAnimationHandler -> com.pavkoo.franklin.controls.r:
    com.pavkoo.franklin.controls.Flipper this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    void sleep(long) -> a
com.pavkoo.franklin.controls.IDialogOKCallBack -> com.pavkoo.franklin.controls.s:
    void UpdateUI(java.lang.Object) -> a
com.pavkoo.franklin.controls.IUpdateMoralSelectState -> com.pavkoo.franklin.controls.t:
    void updateTextCallBack() -> d
com.pavkoo.franklin.controls.IUpdateTextCallBack -> com.pavkoo.franklin.controls.u:
    void updateTextCallBack(java.lang.String,int) -> a
com.pavkoo.franklin.controls.IUpdateViewCallback -> com.pavkoo.franklin.controls.v:
    void callUpdateFontSize() -> e
com.pavkoo.franklin.controls.ParentDialog -> com.pavkoo.franklin.controls.w:
com.pavkoo.franklin.controls.PredicateLayout -> com.pavkoo.franklin.controls.PredicateLayout:
    int line_height -> b
    boolean $assertionsDisabled -> a
    void onMeasure(int,int) -> onMeasure
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    void onLayout(boolean,int,int,int,int) -> onLayout
com.pavkoo.franklin.controls.ScrollingTextView -> com.pavkoo.franklin.controls.ScrollingTextView:
    void onSizeChanged(int,int,int,int) -> onSizeChanged
com.pavkoo.franklin.controls.SettingProjectItemDialog -> com.pavkoo.franklin.controls.x:
    android.widget.TextView tvSettingProjectItemPopupCancel -> a
    android.widget.TextView tvSettingProjectItemPopupYes -> b
    android.widget.EditText txtSettingProjectItemPopupTitle -> c
    android.widget.EditText txtSettingProjectItemPopupTitleDes -> d
    android.widget.EditText txtSettingProjectItemPopupTitleMotto -> e
    com.pavkoo.franklin.controls.AnimMessage amMessage -> f
    android.widget.TextView tvSettingPopupTitle -> g
    com.pavkoo.franklin.controls.SettingProjectItemDialog$EditMode editMode -> h
    com.pavkoo.franklin.common.Moral extraObject -> i
    boolean userChanged -> j
    void SetDialogTitle(java.lang.String) -> a
    com.pavkoo.franklin.controls.SettingProjectItemDialog$EditMode getEditMode() -> a
    void setEditMode(com.pavkoo.franklin.controls.SettingProjectItemDialog$EditMode) -> a
    com.pavkoo.franklin.common.Moral getExtraObject() -> b
    boolean isUserChanged() -> c
    void setExtraObject(com.pavkoo.franklin.common.Moral) -> a
    void initViewData() -> d
    void getDate() -> e
    boolean valided() -> f
    boolean access$0(com.pavkoo.franklin.controls.SettingProjectItemDialog) -> a
    void access$1(com.pavkoo.franklin.controls.SettingProjectItemDialog) -> b
    void access$2(com.pavkoo.franklin.controls.SettingProjectItemDialog,boolean) -> a
    com.pavkoo.franklin.controls.AnimMessage access$3(com.pavkoo.franklin.controls.SettingProjectItemDialog) -> c
    void access$4(com.pavkoo.franklin.controls.SettingProjectItemDialog) -> d
com.pavkoo.franklin.controls.SettingProjectItemDialog$1 -> com.pavkoo.franklin.controls.y:
    com.pavkoo.franklin.controls.SettingProjectItemDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.controls.SettingProjectItemDialog$2 -> com.pavkoo.franklin.controls.z:
    com.pavkoo.franklin.controls.SettingProjectItemDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.controls.SettingProjectItemDialog$3 -> com.pavkoo.franklin.controls.aa:
    com.pavkoo.franklin.controls.SettingProjectItemDialog this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.pavkoo.franklin.controls.SettingProjectItemDialog$4 -> com.pavkoo.franklin.controls.ab:
    com.pavkoo.franklin.controls.SettingProjectItemDialog this$0 -> a
    void onShow(android.content.DialogInterface) -> onShow
com.pavkoo.franklin.controls.SettingProjectItemDialog$EditMode -> com.pavkoo.franklin.controls.ac:
    com.pavkoo.franklin.controls.SettingProjectItemDialog$EditMode Modify -> a
    com.pavkoo.franklin.controls.SettingProjectItemDialog$EditMode Add -> b
    com.pavkoo.franklin.controls.SettingProjectItemDialog$EditMode[] ENUM$VALUES -> c
    com.pavkoo.franklin.controls.SettingProjectItemDialog$EditMode[] values() -> values
    com.pavkoo.franklin.controls.SettingProjectItemDialog$EditMode valueOf(java.lang.String) -> valueOf
com.pavkoo.franklin.controls.SettingSystemFranklinDialog -> com.pavkoo.franklin.controls.ad:
com.pavkoo.franklin.controls.SettingSystemHelpDialog -> com.pavkoo.franklin.controls.ae:
    android.widget.TextView tvSettingSystemHelplPopupOK -> a
    android.widget.TextView tvSettingSystemHelplPopupNext1 -> b
    android.widget.TextView tvSettingSystemHelplPopupNext2 -> c
    android.widget.TextView tvsettingSystemHelpContent1 -> d
    android.widget.TextView tvsettingSystemHelpContent2 -> e
    android.widget.TextView tvsettingSystemHelpContent3 -> f
    android.widget.TextView tvsettingSystemHelpContentTitle1 -> g
    android.widget.TextView tvsettingSystemHelpContentTitle2 -> h
    android.widget.TextView tvsettingSystemHelpContentTitle3 -> i
    android.widget.ImageView ivSettingSystemMe -> j
    android.widget.ScrollView svSettingSystemPopupHelp -> k
    boolean canClose -> l
    void inishow() -> a
    android.widget.TextView access$0(com.pavkoo.franklin.controls.SettingSystemHelpDialog) -> a
    android.widget.TextView access$1(com.pavkoo.franklin.controls.SettingSystemHelpDialog) -> b
    android.widget.TextView access$2(com.pavkoo.franklin.controls.SettingSystemHelpDialog) -> c
    android.widget.TextView access$3(com.pavkoo.franklin.controls.SettingSystemHelpDialog) -> d
    android.widget.TextView access$4(com.pavkoo.franklin.controls.SettingSystemHelpDialog) -> e
    android.widget.TextView access$5(com.pavkoo.franklin.controls.SettingSystemHelpDialog) -> f
    android.widget.ScrollView access$6(com.pavkoo.franklin.controls.SettingSystemHelpDialog) -> g
    android.widget.TextView access$7(com.pavkoo.franklin.controls.SettingSystemHelpDialog) -> h
    android.widget.TextView access$8(com.pavkoo.franklin.controls.SettingSystemHelpDialog) -> i
    android.widget.TextView access$9(com.pavkoo.franklin.controls.SettingSystemHelpDialog) -> j
    android.widget.ImageView access$10(com.pavkoo.franklin.controls.SettingSystemHelpDialog) -> k
    void access$11(com.pavkoo.franklin.controls.SettingSystemHelpDialog) -> l
com.pavkoo.franklin.controls.SettingSystemHelpDialog$1 -> com.pavkoo.franklin.controls.af:
    com.pavkoo.franklin.controls.SettingSystemHelpDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.controls.SettingSystemHelpDialog$2 -> com.pavkoo.franklin.controls.ag:
    com.pavkoo.franklin.controls.SettingSystemHelpDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.controls.SettingSystemHelpDialog$3 -> com.pavkoo.franklin.controls.ah:
    com.pavkoo.franklin.controls.SettingSystemHelpDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.controls.SettingSystemHelpDialog$4 -> com.pavkoo.franklin.controls.ai:
    com.pavkoo.franklin.controls.SettingSystemHelpDialog this$0 -> a
    void onShow(android.content.DialogInterface) -> onShow
com.pavkoo.franklin.controls.SettingSystemMeDialog -> com.pavkoo.franklin.controls.aj:
    android.graphics.drawable.AnimationDrawable ad -> a
    android.widget.ImageView ivbg -> b
com.pavkoo.franklin.controls.SettingSystemRestartDialog -> com.pavkoo.franklin.controls.ak:
    android.widget.TextView tvSettingSystemPopupYes -> a
    android.widget.TextView tvSettingSystemPopupCancel -> b
    android.widget.TextView tvSettingSystemInfo -> c
    android.widget.TextView tvSettingSystemTitle -> d
    com.pavkoo.franklin.controls.IDialogOKCallBack onOKCallBack -> e
    com.pavkoo.franklin.controls.SettingSystemRestartDialog$ViewState vs -> f
    void setVs(com.pavkoo.franklin.controls.SettingSystemRestartDialog$ViewState) -> a
    void setOnOKCallBack(com.pavkoo.franklin.controls.IDialogOKCallBack) -> a
    com.pavkoo.franklin.controls.IDialogOKCallBack access$0(com.pavkoo.franklin.controls.SettingSystemRestartDialog) -> a
    com.pavkoo.franklin.controls.SettingSystemRestartDialog$ViewState access$1(com.pavkoo.franklin.controls.SettingSystemRestartDialog) -> b
    android.widget.TextView access$2(com.pavkoo.franklin.controls.SettingSystemRestartDialog) -> c
    android.widget.TextView access$3(com.pavkoo.franklin.controls.SettingSystemRestartDialog) -> d
com.pavkoo.franklin.controls.SettingSystemRestartDialog$1 -> com.pavkoo.franklin.controls.al:
    com.pavkoo.franklin.controls.SettingSystemRestartDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.controls.SettingSystemRestartDialog$2 -> com.pavkoo.franklin.controls.am:
    com.pavkoo.franklin.controls.SettingSystemRestartDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.controls.SettingSystemRestartDialog$3 -> com.pavkoo.franklin.controls.an:
    com.pavkoo.franklin.controls.SettingSystemRestartDialog this$0 -> a
    void onShow(android.content.DialogInterface) -> onShow
com.pavkoo.franklin.controls.SettingSystemRestartDialog$ViewState -> com.pavkoo.franklin.controls.ao:
    com.pavkoo.franklin.controls.SettingSystemRestartDialog$ViewState SETTINSYSTEMRESTART -> a
    com.pavkoo.franklin.controls.SettingSystemRestartDialog$ViewState SETTINSYSTEMRESTORE -> b
    com.pavkoo.franklin.controls.SettingSystemRestartDialog$ViewState[] ENUM$VALUES -> c
    com.pavkoo.franklin.controls.SettingSystemRestartDialog$ViewState[] values() -> values
    com.pavkoo.franklin.controls.SettingSystemRestartDialog$ViewState valueOf(java.lang.String) -> valueOf
com.pavkoo.franklin.controls.SettingWelcomeDialog -> com.pavkoo.franklin.controls.ap:
    com.pavkoo.franklin.controls.AnimMessage amMessage -> a
    android.widget.TextView tvSettingWelcomePopupCancel -> b
    android.widget.TextView tvSettingWelcomePopupYes -> c
    android.widget.EditText txtSettingWelcomePopupContext -> d
    com.pavkoo.franklin.controls.SettingWelcomeDialog$EditMode editMode -> e
    boolean userChanged -> f
    java.lang.String extraObject -> g
    com.pavkoo.franklin.controls.SettingWelcomeDialog$EditMode getEditMode() -> a
    void setEditMode(com.pavkoo.franklin.controls.SettingWelcomeDialog$EditMode) -> a
    boolean isUserChanged() -> b
    java.lang.String getExtraObject() -> c
    void setExtraObject(java.lang.String) -> a
    void initViewData() -> d
    void getDate() -> e
    boolean valided() -> f
    boolean access$0(com.pavkoo.franklin.controls.SettingWelcomeDialog) -> a
    void access$1(com.pavkoo.franklin.controls.SettingWelcomeDialog) -> b
    void access$2(com.pavkoo.franklin.controls.SettingWelcomeDialog,boolean) -> a
    com.pavkoo.franklin.controls.AnimMessage access$3(com.pavkoo.franklin.controls.SettingWelcomeDialog) -> c
    com.pavkoo.franklin.controls.SettingWelcomeDialog$EditMode access$4(com.pavkoo.franklin.controls.SettingWelcomeDialog) -> d
    void access$5(com.pavkoo.franklin.controls.SettingWelcomeDialog,java.lang.String) -> a
    void access$6(com.pavkoo.franklin.controls.SettingWelcomeDialog) -> e
com.pavkoo.franklin.controls.SettingWelcomeDialog$1 -> com.pavkoo.franklin.controls.aq:
    com.pavkoo.franklin.controls.SettingWelcomeDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.controls.SettingWelcomeDialog$2 -> com.pavkoo.franklin.controls.ar:
    com.pavkoo.franklin.controls.SettingWelcomeDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.controls.SettingWelcomeDialog$3 -> com.pavkoo.franklin.controls.as:
    com.pavkoo.franklin.controls.SettingWelcomeDialog this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.pavkoo.franklin.controls.SettingWelcomeDialog$4 -> com.pavkoo.franklin.controls.at:
    com.pavkoo.franklin.controls.SettingWelcomeDialog this$0 -> a
    void onShow(android.content.DialogInterface) -> onShow
com.pavkoo.franklin.controls.SettingWelcomeDialog$EditMode -> com.pavkoo.franklin.controls.au:
    com.pavkoo.franklin.controls.SettingWelcomeDialog$EditMode Modify -> a
    com.pavkoo.franklin.controls.SettingWelcomeDialog$EditMode Add -> b
    com.pavkoo.franklin.controls.SettingWelcomeDialog$EditMode[] ENUM$VALUES -> c
    com.pavkoo.franklin.controls.SettingWelcomeDialog$EditMode[] values() -> values
    com.pavkoo.franklin.controls.SettingWelcomeDialog$EditMode valueOf(java.lang.String) -> valueOf
com.pavkoo.franklin.controls.Today -> com.pavkoo.franklin.controls.Today:
    android.widget.LinearLayout llBackground -> b
    android.widget.LinearLayout llContent -> c
    com.pavkoo.franklin.controls.Flipper FlipperNumber -> d
    com.pavkoo.franklin.controls.TodayDialog mDialog -> e
    com.pavkoo.franklin.controls.Today$ArcDrawable arcBackground -> a
    android.graphics.Bitmap bmpSmale -> f
    android.graphics.Bitmap bmpSad -> g
    java.lang.String todayDialogTitle -> h
    com.pavkoo.franklin.common.Moral moral -> i
    com.pavkoo.franklin.controls.IUpdateMoralSelectState updateSelectState -> j
    com.pavkoo.franklin.controls.IUpdateTextCallBack updateText -> k
    java.lang.String getTodayDialogTitle() -> getTodayDialogTitle
    void setTodayDialogTitle(java.lang.String) -> setTodayDialogTitle
    com.pavkoo.franklin.common.Moral getMoral() -> getMoral
    void updateUIByMoral(int) -> a
    com.pavkoo.franklin.controls.IUpdateMoralSelectState getUpdateSelectState() -> getUpdateSelectState
    void setUpdateSelectState(com.pavkoo.franklin.controls.IUpdateMoralSelectState) -> setUpdateSelectState
    com.pavkoo.franklin.controls.IUpdateTextCallBack getUpdateText() -> getUpdateText
    void setUpdateText(com.pavkoo.franklin.controls.IUpdateTextCallBack) -> setUpdateText
    void setMoral(com.pavkoo.franklin.common.Moral) -> setMoral
    int getCurrentShowing() -> getCurrentShowing
    void updateViewByMoral() -> a
    void initView() -> b
    android.graphics.Bitmap RotateBitmap(android.graphics.Bitmap,float) -> a
    void iniPopupWindow(android.view.LayoutInflater) -> a
    void updateTextCallBack(java.lang.String,int) -> a
    void setupEvent() -> c
    void callUpdateFontSize() -> e
    com.pavkoo.franklin.controls.TodayDialog access$0(com.pavkoo.franklin.controls.Today) -> a
    com.pavkoo.franklin.common.Moral access$1(com.pavkoo.franklin.controls.Today) -> b
    com.pavkoo.franklin.controls.IUpdateMoralSelectState access$2(com.pavkoo.franklin.controls.Today) -> c
com.pavkoo.franklin.controls.Today$1 -> com.pavkoo.franklin.controls.av:
    com.pavkoo.franklin.controls.Today this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.controls.Today$2 -> com.pavkoo.franklin.controls.aw:
    com.pavkoo.franklin.controls.Today this$0 -> a
    void run() -> run
com.pavkoo.franklin.controls.Today$3 -> com.pavkoo.franklin.controls.ax:
    com.pavkoo.franklin.controls.Today this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.pavkoo.franklin.controls.Today$ArcDrawable -> com.pavkoo.franklin.controls.ay:
    android.graphics.Paint paint -> a
    double PI -> b
    float ARC_STROKEWIDTH -> c
    float CYCLE_STROKEWIDTH -> d
    float SPACE_STROKEWIDTH -> e
    float SPACE_CYCLE_STROKEWIDTH -> f
    float INNERPADDING -> g
    float mOffsetAngle -> h
    android.graphics.RectF mAdapedRect -> i
    int mArcDoneColor -> j
    int mArcUnDoneColor -> k
    java.lang.String displayValue -> l
    android.graphics.Bitmap mBmpSmale -> m
    android.graphics.Bitmap mBmpSad -> n
    int mCurrentShowing -> o
    int mCycleColor -> p
    int mCycleBGColor -> q
    float arcAngle -> r
    int mCycle -> s
    java.util.List mHistoryCheckList -> t
    float mAdaptedFontSize -> u
    com.pavkoo.franklin.controls.IUpdateViewCallback updateFontSizeCallback -> v
    com.pavkoo.franklin.controls.IUpdateTextCallBack updateText -> w
    int[] $SWITCH_TABLE$com$pavkoo$franklin$common$CheckState -> x
    void initView() -> m
    android.graphics.Bitmap getBmpSmale() -> a
    void setBmpSmale(android.graphics.Bitmap) -> a
    android.graphics.Bitmap getBmpSad() -> b
    void setBmpSad(android.graphics.Bitmap) -> b
    int getArcUnDoneColor() -> c
    int getCurrentShowing() -> d
    void setArcUnDoneColor(int) -> a
    int getCycle() -> e
    void setHistoryCheckList(java.util.List) -> a
    void setCycle(int) -> b
    int getCycleBGColor() -> f
    void setCycleBGColor(int) -> c
    float getAdaptedFontSize() -> g
    int getArcDoneColor() -> h
    void setArcDoneColor(int) -> d
    int getCycleColor() -> i
    void setCycleColor(int) -> e
    com.pavkoo.franklin.controls.IUpdateTextCallBack getUpdateText() -> j
    void setUpdateText(com.pavkoo.franklin.controls.IUpdateTextCallBack) -> a
    android.graphics.RectF getAdapedRect() -> k
    void setAngleValue(float) -> a
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void drawArc(android.graphics.Canvas,android.graphics.Paint,android.graphics.RectF) -> a
    int getArcColor(com.pavkoo.franklin.common.CheckState) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawFace(android.graphics.Canvas,android.graphics.Paint,android.graphics.RectF) -> b
    void adaptFontSize() -> n
    void updateTextCallBack(java.lang.String,int) -> a
    int[] $SWITCH_TABLE$com$pavkoo$franklin$common$CheckState() -> l
    void access$1(com.pavkoo.franklin.controls.Today$ArcDrawable,com.pavkoo.franklin.controls.IUpdateViewCallback) -> a
com.pavkoo.franklin.controls.TodayDialog -> com.pavkoo.franklin.controls.az:
    android.widget.RelativeLayout llappTodayPopupComment -> a
    android.widget.LinearLayout llprogressLine -> b
    android.widget.RadioGroup rgpToday -> c
    android.widget.RadioButton gpbTodayYes -> d
    android.widget.RadioButton gpbTodayNo -> e
    android.widget.AutoCompleteTextView txtComment -> f
    android.widget.TextView tvTodayPopupYes -> g
    android.widget.TextView title -> h
    com.pavkoo.franklin.common.FranklinApplication app -> i
    boolean resultChanged -> j
    boolean newComment -> k
    int newCommentIndex -> l
    android.animation.ObjectAnimator closePopAnim -> m
    com.pavkoo.franklin.common.CheckState checkState -> n
    java.lang.Object extraObject -> o
    void setDialogTitle(java.lang.String) -> a
    void updateUIByMoral(int) -> a
    int getNewCommentIndex() -> a
    boolean isNewComment() -> b
    com.pavkoo.franklin.common.CheckState getCheckState() -> c
    void setCheckState(com.pavkoo.franklin.common.CheckState) -> a
    java.lang.Object getExtraObject() -> d
    void setExtraObject(java.lang.Object) -> a
    void showState(com.pavkoo.franklin.controls.TodayDialog$DialogState) -> a
    boolean isResultChanged() -> e
    void iniAutoComplemet() -> f
    void addComment() -> g
    void access$0(com.pavkoo.franklin.controls.TodayDialog) -> a
    void access$1(com.pavkoo.franklin.controls.TodayDialog,boolean) -> a
    void access$2(com.pavkoo.franklin.controls.TodayDialog,com.pavkoo.franklin.common.CheckState) -> a
    void access$3(com.pavkoo.franklin.controls.TodayDialog) -> b
    android.widget.RadioButton access$4(com.pavkoo.franklin.controls.TodayDialog) -> c
    android.widget.RadioGroup access$5(com.pavkoo.franklin.controls.TodayDialog) -> d
    android.widget.RelativeLayout access$6(com.pavkoo.franklin.controls.TodayDialog) -> e
    android.widget.TextView access$7(com.pavkoo.franklin.controls.TodayDialog) -> f
    android.animation.ObjectAnimator access$8(com.pavkoo.franklin.controls.TodayDialog) -> g
    android.widget.LinearLayout access$9(com.pavkoo.franklin.controls.TodayDialog) -> h
com.pavkoo.franklin.controls.TodayDialog$1 -> com.pavkoo.franklin.controls.ba:
    com.pavkoo.franklin.controls.TodayDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.controls.TodayDialog$2 -> com.pavkoo.franklin.controls.bb:
    com.pavkoo.franklin.controls.TodayDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.controls.TodayDialog$3 -> com.pavkoo.franklin.controls.bc:
    com.pavkoo.franklin.controls.TodayDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.controls.TodayDialog$4 -> com.pavkoo.franklin.controls.bd:
    com.pavkoo.franklin.controls.TodayDialog this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.pavkoo.franklin.controls.TodayDialog$5 -> com.pavkoo.franklin.controls.be:
    com.pavkoo.franklin.controls.TodayDialog this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.pavkoo.franklin.controls.TodayDialog$6 -> com.pavkoo.franklin.controls.bf:
    com.pavkoo.franklin.controls.TodayDialog this$0 -> a
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.pavkoo.franklin.controls.TodayDialog$7 -> com.pavkoo.franklin.controls.bg:
    boolean isCancel -> b
    com.pavkoo.franklin.controls.TodayDialog this$0 -> a
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
com.pavkoo.franklin.controls.TodayDialog$8 -> com.pavkoo.franklin.controls.bh:
    com.pavkoo.franklin.controls.TodayDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.pavkoo.franklin.controls.TodayDialog$DialogState -> com.pavkoo.franklin.controls.bi:
    com.pavkoo.franklin.controls.TodayDialog$DialogState DSSelection -> a
    com.pavkoo.franklin.controls.TodayDialog$DialogState DSNote -> b
    com.pavkoo.franklin.controls.TodayDialog$DialogState[] ENUM$VALUES -> c
    com.pavkoo.franklin.controls.TodayDialog$DialogState[] values() -> values
    com.pavkoo.franklin.controls.TodayDialog$DialogState valueOf(java.lang.String) -> valueOf
com.pavkoo.franklin.controls.TodayDialog$MyAdapter -> com.pavkoo.franklin.controls.bj:
    com.pavkoo.franklin.controls.TodayDialog$MyAdapter$MyFilter mFilter -> b
    java.util.List mOriginalValues -> c
    java.util.List mObjects -> d
    com.pavkoo.franklin.controls.TodayDialog this$0 -> a
    android.widget.Filter getFilter() -> getFilter
    java.util.List access$0(com.pavkoo.franklin.controls.TodayDialog$MyAdapter) -> a
    java.util.List access$1(com.pavkoo.franklin.controls.TodayDialog$MyAdapter) -> b
    void access$2(com.pavkoo.franklin.controls.TodayDialog$MyAdapter,java.util.List) -> a
com.pavkoo.franklin.controls.TodayDialog$MyAdapter$MyFilter -> com.pavkoo.franklin.controls.bk:
    com.pavkoo.franklin.controls.TodayDialog$MyAdapter this$1 -> a
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
com.pavkoo.franklin.controls.TotalAdapter -> com.pavkoo.franklin.controls.bl:
    android.widget.LinearLayout llCommentItemBg -> a
    android.widget.TextView txtCommentItemNumber -> b
    android.widget.TextView txtCommentItemText -> c
    java.util.List morals -> d
    int mainColor -> e
    android.content.Context context -> f
    void setMorals(java.util.List) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.pavkoo.franklin.controls.TrendAdapter -> com.pavkoo.franklin.controls.bm:
    java.util.List morals -> a
    android.content.Context context -> b
    void setMorals(java.util.List) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.pavkoo.franklin.controls.TrendReport -> com.pavkoo.franklin.controls.TrendReport:
    android.graphics.Paint mPaint -> a
    android.graphics.Path path -> b
    float spacex -> c
    float spacey -> d
    java.util.List points -> e
    int mainColor -> f
    com.pavkoo.franklin.common.Moral moral -> g
    com.pavkoo.franklin.common.Moral getMoral() -> getMoral
    void setMoral(com.pavkoo.franklin.common.Moral,int) -> a
    void initView() -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void getSpace() -> getSpace
